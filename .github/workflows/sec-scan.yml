name: Security Scan
on: 
    push:
    pull_request:
    workflow_run:
        workflows: ["Build and Push Docker Image"]
        types:
            - completed
            
permissions:
    contents: read
    packages: read

jobs: 
    trivy-scan:
        runs-on: ubuntu-latest
        env:
            IMAGE: test
        if: |
            ${{ github.event.workflow_run.conclusion == 'success' }}
        steps:
            - name: Login to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

            - name: Prepare IMAGE for scan
              run: |
                REPO="${{ github.repository }}"
                REPO_LOWER=$(echo "$REPO" | tr '[:upper:]' '[:lower:]' | tr '_' '-')
                echo "IMAGE=ghcr.io/${REPO_LOWER}/demo-app:ci-${{ github.sha }}" >> $GITHUB_ENV
                  
            - name: Pull Docker Image
              run: |
                echo "IMAGE=${{ env.IMAGE }}"
                docker pull "${{ env.IMAGE }}"
                

            - name: Run Trivy Scan
              uses: aquasecurity/trivy-action@master
              with:
                    image-ref: ${{ env.IMAGE }}
                    format: 'sarif'
                    output: 'trivy-report.sarif'
                    exit-code: '0'

            - name: Install jq
              run: |
                  sudo apt-get install -y jq

            - name: Debug SARIF runs
              run: |
                echo "=== run driver names ==="
                jq -r '.runs[].tool.driver.name' trivy-report.sarif || true
                echo "=== full tool.driver objects ==="
                jq -C '.runs[] | {name: .tool.driver.name, driver: .tool.driver}' trivy-report.sarif

            - name: "Filter unsupported runs"
              run: |
                jq ' .runs |= map( select( (tostring | test("aws|kubernetes|eks|arn"; "i") ) | not ) ) ' trivy-report.sarif > trivy-report-filtered.sarif
                echo "Remaining run names:"
                jq -r '.runs[].tool.driver.name' trivy-report-filtered.sarif || true

            - name: Convert filtered SARIF to HTML (only if filtered contains something)
              run: |
                if [ "$(jq '.runs | length' trivy-report-filtered.sarif)" -gt 0 ]; then
                trivy convert --format template --template "@contrib/html.tpl" --output trivy-report.html trivy-report-filtered.sarif
                else
                echo "No convertible runs left after filtering; skip convert."
                fi

            - name: "Fallback: generate HTML directly from image"
              run: |
                trivy image --format template --template "@contrib/html.tpl" --output trivy-image-report.html ${{ env.IMAGE }} || echo "trivy image failed"

            - name: Upload SARIF artifact
              uses: actions/upload-artifact@v4
              with:
                name: trivy-sarif
                path: trivy-report.sarif

            - name: Upload HTML reports
              uses: actions/upload-artifact@v4
              with:
                name: trivy-html
                path: |
                    trivy-report.html
                    trivy-image-report.html
