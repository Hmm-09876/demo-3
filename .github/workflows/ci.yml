name: CI
on : [push, pull_request]

permissions:
  contents: write

jobs:
    lint:
        name: Lint (flake8)
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                python-version: '3.11'
            
            - name: Cache pip
              uses: actions/cache@v4
              with:
                path: ~/.cache/pip
                key: ${{ runner.os }}-pip-${{ hashFiles('**/src/**/requirements.txt') }}
                restore-keys: |
                  ${{ runner.os }}-pip-

            - name: Install lint dependencies
              run: |
                python -m pip install --upgrade pip
                pip install flake8

            - name: Run flake8
              run: |
                flake8 ./src/demo_app/ || true
            

    terraform:
        name: Terraform Validate
        runs-on: ubuntu-latest
        needs: lint
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3

            - name: Start LocalStack
              working-directory: ./infra/localstack
              run: |
                docker compose up -d

            - name: Terraform Init and Apply
              working-directory: ./infra/terraform
              run: |
                terraform init -input=false
                terraform apply -auto-approve -input=false -var-file=envs/dev.tfvars
                echo "LAMBDA_FUNCTION_NAME=$(terraform output -raw lambda_function_name)" >> $GITHUB_ENV

            - name: Terraform Validate
              working-directory: ./infra/terraform
              run: |
                terraform validate

            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r src/demo_app/requirements.txt || true
                
            - name: Run tests
              run: |
                pytest --junitxml=test-reports/junit.xml --cov=report=xml:./test-reports/coverage.xml 

            - name: Upload test artifacts
              uses: actions/upload-artifact@v4
              with:
                name: test-reports
                path: test-reports/


  
