name: Build and Push Docker Image
on: 
    pull_request:
    workflow_run:
        workflows: ["CI"]
        types:
            - completed
    workflow_dispatch:

permissions:
    contents: write
    id-token: write
    packages: write

env:
  DOCKERFILE_PATH: ./src/demo_app/Dockerfile
  IMAGE_TAG_PREFIX: ci
  K8S_MANIFESTS_PATH: k8s
  K8S_NAMESPACE: ci-deploy
  DEPLOYMENT_NAME: demo-app
  CONTAINER_NAME: demo-app


jobs:
    build-and-push:
        name: Build and Push
        runs-on: ubuntu-latest
        outputs:
          image: ${{ steps.set-image.outputs.image }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Login to GHCR (if provided)
              uses: docker/login-action@v2
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GHCR_TOKEN }}

            - name: set-image
              id: set-image
              shell: bash
              run: |
                RAW_IMAGE="ghcr.io/${{ github.repository }}/demo-app:${{ env.IMAGE_TAG_PREFIX }}-${{ github.sha }}"
                IMAGE=$(echo "$RAW_IMAGE" | tr '[:upper:]' '[:lower:]' | tr '_' '-')
                echo "IMAGE=$IMAGE"
                echo "image=$IMAGE" >> $GITHUB_OUTPUT

            - name: Show IMAGE (debug)
              run: |
                echo "IMAGE=$IMAGE"
                docker --version

            - name: Build and push image
              uses: docker/build-push-action@v4
              with:
                context: ./src/demo_app/
                file: ${{ env.DOCKERFILE_PATH }}
                push: ${{ secrets.GHCR_TOKEN != '' }}
                tags: ${{ steps.set-image.outputs.image }}
                cache-from: type=registry,ref=${{ steps.set-image.outputs.image }} || true
                cache-to: type=inline
              
    
    prepare-manifests:
      name: Prepare k8s manifests 
      runs-on: ubuntu-latest
      needs: build-and-push
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Prepare replaced manifests
          id: prep
          run: |
            IMAGE="${{ needs.build-and-push.outputs.image }}"
            mkdir -p replaced_k8s
            cp -r ${{ env.K8S_MANIFESTS_PATH }}/* replaced_k8s/ || true
            find replaced_k8s -type f -name "*.yml" -o -name "*.yaml" | xargs -r sed -i "s|IMAGE_PLACEHOLDER|${IMAGE}|g"
            ls -R replaced_k8s

        - name: Upload prepared manifests artifact
          uses: actions/upload-artifact@v4
          with:
            name: prepared-k8s-manifests
            path: replaced_k8s/

